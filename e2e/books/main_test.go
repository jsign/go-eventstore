package main

import (
	"testing"

	"github.com/textileio/go-eventstore/store"
)

func TestBooks(t *testing.T) {
	s := createMemStore()

	model, err := s.RegisterJSONPatcher("Book", &Book{})
	checkErr(err)

	// Bootstrap the model with some books: two from Author1 and one from Author2
	{
		// Create a two books for Author1
		book1 := &Book{ // Notice ID will be autogenerated
			Title:  "Title1",
			Author: "Author1",
			Meta:   BookStats{TotalReads: 100, Rating: 3.2},
		}
		book2 := &Book{
			Title:  "Title2",
			Author: "Author1",
			Meta:   BookStats{TotalReads: 150, Rating: 4.1},
		}
		checkErr(model.Create(book1, book2)) // Note you can create multiple books at the same time (variadic)

		// Create book for Author2
		book3 := &Book{
			Title:  "Title3",
			Author: "Author2",
			Meta:   BookStats{TotalReads: 500, Rating: 4.9},
		}
		checkErr(model.Create(book3))
	}

	// Query, Update, and Save
	{
		var books []*Book
		err := model.Find(&books, store.Where("Title").Eq("Title3"))
		checkErr(err)

		// Modify title
		book := books[0]
		book.Title = "ModifiedTitle"
		model.Save(book)
		err = model.Find(&books, store.Where("Title").Eq("Title3"))
		checkErr(err)
		if len(books) != 0 {
			panic("Book with Title3 shouldn't exist")
		}

		// Delete it
		err = model.Find(&books, store.Where("Title").Eq("ModifiedTitle"))
		checkErr(err)
		if len(books) != 1 {
			panic("Book with ModifiedTitle should exist")
		}
		model.Delete(books[0].ID)
		err = model.Find(&books, store.Where("Title").Eq("ModifiedTitle"))
		checkErr(err)
		if len(books) != 0 {
			panic("Book with ModifiedTitle shouldn't exist")
		}
	}
}
