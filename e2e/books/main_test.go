package main

import (
	"testing"

	"github.com/textileio/go-eventstore/store"
)

func TestBooks(t *testing.T) {
	s := createMemStore()

	model, err := s.RegisterJSONPatcher("Book", &Book{})
	checkErr(err)

	// Bootstrap the model with some books: two from Author1 and one from Author2
	{
		// Create a two books for Author1
		book1 := &Book{ // Notice ID will be autogenerated
			Title:  "Title1",
			Author: "Author1",
			Meta:   BookStats{TotalReads: 100, Rating: 3.2},
		}
		book2 := &Book{
			Title:  "Title2",
			Author: "Author1",
			Meta:   BookStats{TotalReads: 150, Rating: 4.1},
		}
		checkErr(model.Create(book1, book2)) // Note you can create multiple books at the same time (variadic)

		// Create book for Author2
		book3 := &Book{
			Title:  "Title3",
			Author: "Author2",
			Meta:   BookStats{TotalReads: 500, Rating: 4.9},
		}
		checkErr(model.Create(book3))
	}

	// Sorted query
	{
		var books []*Book
		// Ascending
		err := model.Find(&books, store.Where("Author").Eq("Author1").OrderBy("Meta.TotalReads"))
		checkErr(err)
		if books[0].Meta.TotalReads != 100 || books[1].Meta.TotalReads != 150 {
			panic("books aren't ordered asc correctly")
		}
		// Descending
		err = model.Find(&books, store.Where("Author").Eq("Author1").OrderByDesc("Meta.TotalReads"))
		checkErr(err)
		if books[0].Meta.TotalReads != 150 || books[1].Meta.TotalReads != 100 {
			panic("books aren't ordered desc correctly")
		}
	}
}
